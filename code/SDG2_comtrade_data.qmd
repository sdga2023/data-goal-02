---
title: "Comtrade Data Prep"
format: html
---

# Intro

Data for SDG 2 is gathered from Comtrade using Python.  Because subscription key was used, data was gathered in another file, but below is the code used to access the data in python.  To run the file, you will need to add a comtrade API key to the file.  The file will also need to be run in a python environment with the following packages installed: pandas, requests, comtradeapicall, time, certifi, and os.

```{python}
#| label: load
import pandas
import requests
import comtradeapicall
import time
import certifi
import os
os.environ['REQUESTS_CA_BUNDLE'] = certifi.where()
```

```{python}
#| label: pythondata
#| eval: false


#get a vector of year months from 202101 to 202212
yearmonths = [str(x) + str(y).zfill(2) for x in range(2021,2023) for y in range(1,13)]


#get m49 code for world, turkiye, indonesia, pakistan, tunisia, EU
# create as character vector
reporter_code = ['0','792','360','586','788','9010']
#put vector in a comma separated string
reporter_code = '28, 31, 32, 36, 51, 52, 56, 68, 70, 72, 76, 84, 97, 100, 104, 112, 124, 152, 156, 170, 191, 196, 203, 204, 208, 214, 218, 222, 233, 242, 246, 268, 276, 300, 308, 320, 328, 344, 348, 352, 360, 372, 376, 381, 392, 404, 417, 428, 440, 442, 446, 458, 480, 484, 496, 498, 499, 528, 554, 558, 566, 579, 586, 591, 600, 608, 616, 620, 634, 642, 643, 646, 670, 678, 688, 699, 702, 703, 705, 710, 724, 752, 757, 768, 780, 788, 792, 804, 807, 818, 826, 834, 842, 854, 858, 860, 882, 894, 9010'

#remove spaces in partner_code
reporter_code = reporter_code.replace(" ", "")



#turn the previous lines into a function, where period is the only input
#function to get data from comtrade api
def getComtradeData(period):
    comdat = comtradeapicall.getFinalData(subscription_key,
                                        typeCode='C', freqCode='M', clCode='HS', 
                                        period=period,
                                        reporterCode=reporter_code, cmdCode='10,15', flowCode='M', partnerCode='804,0',
                                        partner2Code=None,
                                        customsCode=None, motCode=None, maxRecords=50000, format_output='JSON',
                                        aggregateBy=None, breakdownMode='classic'
                                        , countOnly=None, includeDesc=True)
    return(comdat)

#loop through yearmonths_2021 and get data for each yearmonth and append to mydf_2021
mydf = pandas.DataFrame()
for i in range(0,len(yearmonths)):
    mydf = mydf.append(getComtradeData(yearmonths[i]), ignore_index=True)
    print(yearmonths[i])
    print(i)
    print(len(mydf))
    print('-----------------')
    # wait 15 seconds between each call to avoid exceeding the api call limit
    time.sleep(15)

mydf.to_csv(directory + 'SDG_2_Comtrade_raw.csv', index=False)
```

```{python}
#| label: comtrade2
#| eval: false

#second query

#get a vector of year months from 202101 to 202212
yearmonths = ["202103","202104","202105","202203","202204","202205"]

#put vector in a comma separated string
reporter_code = '804'

codes = '01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22'

#turn the previous lines into a function, where period is the only input
#function to get data from comtrade api
def getComtradeData(period):
    comdat = comtradeapicall.getFinalData(subscription_key,
                                        typeCode='C', freqCode='M', clCode='HS', 
                                        period=period,
                                        reporterCode=reporter_code, cmdCode=codes, flowCode='M', partnerCode='0',
                                        partner2Code=None,
                                        customsCode=None, motCode=None, maxRecords=50000, format_output='JSON',
                                        aggregateBy=None, breakdownMode='classic'
                                        , countOnly=None, includeDesc=True)
    return(comdat)

#loop through yearmonths
mydf = pandas.DataFrame()
for i in range(0,len(yearmonths)):
    mydf = mydf.append(getComtradeData(yearmonths[i]), ignore_index=True)
    print(yearmonths[i])
    print(i)
    print(len(mydf))
    print('-----------------')
    # wait 15 seconds between each call to avoid exceeding the api call limit
    time.sleep(15)

mydf.to_csv(directory + 'SDG_2_Comtrade2_raw.csv', index=False)
```

```{r}
library(tidyverse)
library(here)

#get directory
directory <- paste0(here(), "/Data/")
save <- paste0(here(), "/output_data/") 
```

```{r}
#| label: load

#load comtrade data
comtrade_df <- read_csv(paste0(directory, 'SDG_2_Comtrade_raw.csv'))

#create some new columns
comtrade_final_df <- comtrade_df %>%
  transmute(
    period=as.character(refPeriodId),
    period=substr(period, 1,6),
    period=as.numeric(period),
    reporter_code=reporterCode,
    reporter_iso3c=reporterISO,
    reporter=reporterDesc,
    commodity_group=case_when(
      cmdDesc=="Cereals" ~ "Cereals",
      cmdDesc=="Animal or vegetable fats and oils and their cleavage products; prepared animal fats; animal or vegetable waxes" ~ "Oils and fats",
      cmdDesc=="Animal, vegetable or microbial fats and oils and their cleavage products; prepared edible fats; animal or vegetable waxes" ~ "Oils and fats",
      TRUE ~ "Other"
    ),
    partner=partnerDesc,
    value=primaryValue
  )

#pivot ukraine and world totals wider
comtrade_final_df <- comtrade_final_df %>%
  pivot_wider(
    names_from='partner',
    values_from = 'value'
  )

write_excel_csv(comtrade_final_df, paste0(save,'SDG_2_Comtrade_final.csv'))
```

